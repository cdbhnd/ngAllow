!function(){"use strict";angular.module("ngAllow",[])}(),function(){"use strict";function o(o,r){function n(n,a,t){function i(o){var r=o.replace(/\n/g," ").match(/^([^(]+?)\s*(\((.*)\))?$/);if(!r||4!==r.length)throw new Error('Invalid permission ref "'+o+'"');return{name:r[1],payloadExpr:r[3]||null}}var l=a.css("display"),e=i(t.allow),s=function(o){o&&(e.payload=angular.copy(o));var n=r.authorize(e.name,e.payload);n?a.css("display",l):a.css("display","none")};e.payloadExpr?(n.$watch(e.payloadExpr,function(o){o!==e.payload&&s(o)},!0),e.payload=angular.copy(n.$eval(e.payloadExpr))):e.payload={},o.$on("$allow.refresh",function(){s()}),s()}var a={link:n,restrict:"A"};return a}angular.module("ngAllow").directive("allow",o),o.$inject=["$rootScope","$allowProvider"]}(),function(){"use strict";function o(){return new r}function r(){this.roles={},this.permissions={}}angular.module("ngAllow").factory("$allowProvider",o),r.prototype.registerRole=function(o,r){this.roles[o]={grant:r}},r.prototype.registerPermission=function(o,r){this.permissions[o]={roles:r}},r.prototype.authorize=function(o,r){var n=this,a=this.permissions[o],t=!1;return angular.forEach(a.roles,function(o){n.roles[o].grant(r)&&(t=!0)}),t}}();